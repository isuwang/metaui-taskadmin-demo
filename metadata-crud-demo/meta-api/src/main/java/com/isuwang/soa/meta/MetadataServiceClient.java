package com.isuwang.soa.meta;

      import com.isuwang.dapeng.core.*;
      import com.isuwang.org.apache.thrift.*;
      import com.isuwang.dapeng.remoting.BaseCommonServiceClient;
      import java.util.concurrent.CompletableFuture;
      import java.util.concurrent.Future;
      import com.isuwang.soa.meta.MetadataServiceCodec.*;

      /**
       * Autogenerated by Dapeng-Code-Generator (1.2.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated

      **/
      public class MetadataServiceClient extends BaseCommonServiceClient{

      public MetadataServiceClient() {
        super("com.isuwang.soa.meta.service.MetadataService", "1.0.0");
      }

      @Override
      protected boolean isSoaTransactionalProcess(){
        return false;
      }

      
       /**
       * 
       **/
          
              public com.isuwang.soa.meta.domain.TFieldMetaResponse queryFieldMetas(com.isuwang.soa.meta.domain.TFieldMetaRequest request) throws SoaException{
                initContext("queryFieldMetas");

          try {
             queryFieldMetas_args queryFieldMetas_args = new queryFieldMetas_args();
          queryFieldMetas_args.setRequest(request);
            

          queryFieldMetas_result response = sendBase(queryFieldMetas_args, new QueryFieldMetas_argsSerializer(), new QueryFieldMetas_resultSerializer());

             
                  
                        return response.getSuccess();
                      
                
          }catch (SoaException e){
              throw e;
          } catch (TException e){
              throw new SoaException(e);
          }finally {
            destoryContext();
          }
          }
            
        
       /**
       * 
       **/
          
              public void createFieldMeta(com.isuwang.soa.meta.domain.TFieldMetaSaveRequest request) throws SoaException{
                initContext("createFieldMeta");

          try {
             createFieldMeta_args createFieldMeta_args = new createFieldMeta_args();
          createFieldMeta_args.setRequest(request);
            

          createFieldMeta_result response = sendBase(createFieldMeta_args, new CreateFieldMeta_argsSerializer(), new CreateFieldMeta_resultSerializer());

             
                  
                
          }catch (SoaException e){
              throw e;
          } catch (TException e){
              throw new SoaException(e);
          }finally {
            destoryContext();
          }
          }
            
        
       /**
       * 
       **/
          
              public void updateFieldMeta(com.isuwang.soa.meta.domain.TFieldMetaSaveRequest request) throws SoaException{
                initContext("updateFieldMeta");

          try {
             updateFieldMeta_args updateFieldMeta_args = new updateFieldMeta_args();
          updateFieldMeta_args.setRequest(request);
            

          updateFieldMeta_result response = sendBase(updateFieldMeta_args, new UpdateFieldMeta_argsSerializer(), new UpdateFieldMeta_resultSerializer());

             
                  
                
          }catch (SoaException e){
              throw e;
          } catch (TException e){
              throw new SoaException(e);
          }finally {
            destoryContext();
          }
          }
            
        
       /**
       * 
       **/
          
              public void deleteFieldMeta(Integer id) throws SoaException{
                initContext("deleteFieldMeta");

          try {
             deleteFieldMeta_args deleteFieldMeta_args = new deleteFieldMeta_args();
          deleteFieldMeta_args.setId(id);
            

          deleteFieldMeta_result response = sendBase(deleteFieldMeta_args, new DeleteFieldMeta_argsSerializer(), new DeleteFieldMeta_resultSerializer());

             
                  
                
          }catch (SoaException e){
              throw e;
          } catch (TException e){
              throw new SoaException(e);
          }finally {
            destoryContext();
          }
          }
            
        

      /**
      * getServiceMetadata
      **/
      public String getServiceMetadata() throws SoaException {
        initContext("getServiceMetadata");
        try {
          getServiceMetadata_args getServiceMetadata_args = new getServiceMetadata_args();
          getServiceMetadata_result response = sendBase(getServiceMetadata_args, new GetServiceMetadata_argsSerializer(), new GetServiceMetadata_resultSerializer());
          return response.getSuccess();
        }catch (SoaException e){
          throw e;
        } catch (TException e){
          throw new SoaException(e);
        } finally {
          destoryContext();
        }
      }

      }
    