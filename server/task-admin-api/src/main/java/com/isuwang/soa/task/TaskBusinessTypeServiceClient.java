package com.isuwang.soa.task;

      import com.isuwang.dapeng.core.*;
      import com.isuwang.org.apache.thrift.*;
      import com.isuwang.dapeng.remoting.BaseCommonServiceClient;
      import java.util.concurrent.CompletableFuture;
      import java.util.concurrent.Future;
      import com.isuwang.soa.task.TaskBusinessTypeServiceCodec.*;

      /**
       * Autogenerated by Dapeng-Code-Generator (1.2.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated

      **/
      public class TaskBusinessTypeServiceClient extends BaseCommonServiceClient{

      public TaskBusinessTypeServiceClient() {
        super("com.isuwang.soa.task.service.TaskBusinessTypeService", "1.0.0");
      }

      @Override
      protected boolean isSoaTransactionalProcess(){
        return false;
      }

      
       /**
       * 
       **/
          
              public com.isuwang.soa.task.domain.TBusinessTypeResponse findBusinessTypes(com.isuwang.soa.task.domain.TBusinessTypeRequest request) throws SoaException{
                initContext("findBusinessTypes");

          try {
             findBusinessTypes_args findBusinessTypes_args = new findBusinessTypes_args();
          findBusinessTypes_args.setRequest(request);
            

          findBusinessTypes_result response = sendBase(findBusinessTypes_args, new FindBusinessTypes_argsSerializer(), new FindBusinessTypes_resultSerializer());

             
                  
                        return response.getSuccess();
                      
                
          }catch (SoaException e){
              throw e;
          } catch (TException e){
              throw new SoaException(e);
          }finally {
            destoryContext();
          }
          }
            
        
       /**
       * 
       **/
          
              public void createBusinessType(com.isuwang.soa.task.domain.TSaveBusinessType request) throws SoaException{
                initContext("createBusinessType");

          try {
             createBusinessType_args createBusinessType_args = new createBusinessType_args();
          createBusinessType_args.setRequest(request);
            

          createBusinessType_result response = sendBase(createBusinessType_args, new CreateBusinessType_argsSerializer(), new CreateBusinessType_resultSerializer());

             
                  
                
          }catch (SoaException e){
              throw e;
          } catch (TException e){
              throw new SoaException(e);
          }finally {
            destoryContext();
          }
          }
            
        
       /**
       * 
       **/
          
              public void updateBusinessType(com.isuwang.soa.task.domain.TSaveBusinessType request) throws SoaException{
                initContext("updateBusinessType");

          try {
             updateBusinessType_args updateBusinessType_args = new updateBusinessType_args();
          updateBusinessType_args.setRequest(request);
            

          updateBusinessType_result response = sendBase(updateBusinessType_args, new UpdateBusinessType_argsSerializer(), new UpdateBusinessType_resultSerializer());

             
                  
                
          }catch (SoaException e){
              throw e;
          } catch (TException e){
              throw new SoaException(e);
          }finally {
            destoryContext();
          }
          }
            
        
       /**
       * 
       **/
          
              public void deleteBusinessType(Integer id) throws SoaException{
                initContext("deleteBusinessType");

          try {
             deleteBusinessType_args deleteBusinessType_args = new deleteBusinessType_args();
          deleteBusinessType_args.setId(id);
            

          deleteBusinessType_result response = sendBase(deleteBusinessType_args, new DeleteBusinessType_argsSerializer(), new DeleteBusinessType_resultSerializer());

             
                  
                
          }catch (SoaException e){
              throw e;
          } catch (TException e){
              throw new SoaException(e);
          }finally {
            destoryContext();
          }
          }
            
        
       /**
       * 
       **/
          
              public java.util.List<com.isuwang.soa.task.domain.TTaskPickerContainer> findAllBusinessTypes4Picker() throws SoaException{
                initContext("findAllBusinessTypes4Picker");

          try {
             findAllBusinessTypes4Picker_args findAllBusinessTypes4Picker_args = new findAllBusinessTypes4Picker_args();
          

          findAllBusinessTypes4Picker_result response = sendBase(findAllBusinessTypes4Picker_args, new FindAllBusinessTypes4Picker_argsSerializer(), new FindAllBusinessTypes4Picker_resultSerializer());

             
                  
                        return response.getSuccess();
                      
                
          }catch (SoaException e){
              throw e;
          } catch (TException e){
              throw new SoaException(e);
          }finally {
            destoryContext();
          }
          }
            
        

      /**
      * getServiceMetadata
      **/
      public String getServiceMetadata() throws SoaException {
        initContext("getServiceMetadata");
        try {
          getServiceMetadata_args getServiceMetadata_args = new getServiceMetadata_args();
          getServiceMetadata_result response = sendBase(getServiceMetadata_args, new GetServiceMetadata_argsSerializer(), new GetServiceMetadata_resultSerializer());
          return response.getSuccess();
        }catch (SoaException e){
          throw e;
        } catch (TException e){
          throw new SoaException(e);
        } finally {
          destoryContext();
        }
      }

      }
    